//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace nmvm.Models.nmvm
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NMVM_Entities : DbContext
    {
        public NMVM_Entities()
            : base("name=NMVM_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Contract> Contracts { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Position> Positions { get; set; }
        public virtual DbSet<Reference> References { get; set; }
        public virtual DbSet<ReferenceDomain> ReferenceDomains { get; set; }
        public virtual DbSet<Unit> Units { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserRole> UserRoles { get; set; }
        public virtual DbSet<Vacancy> Vacancies { get; set; }
        public virtual DbSet<Backfill> Backfills { get; set; }
        public virtual DbSet<PositionHistory> PositionHistories { get; set; }
    
        public virtual int usp_INSERT_User(string username, string firstName, string lastName, string email, string mobile)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_INSERT_User", usernameParameter, firstNameParameter, lastNameParameter, emailParameter, mobileParameter);
        }
    
        public virtual int usp_UPDATE_User(Nullable<int> id, string username, string firstName, string lastName, string email, string mobile, string modifiedByUserName, string modifiedByDisplayName)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("Mobile", mobile) :
                new ObjectParameter("Mobile", typeof(string));
    
            var modifiedByUserNameParameter = modifiedByUserName != null ?
                new ObjectParameter("ModifiedByUserName", modifiedByUserName) :
                new ObjectParameter("ModifiedByUserName", typeof(string));
    
            var modifiedByDisplayNameParameter = modifiedByDisplayName != null ?
                new ObjectParameter("ModifiedByDisplayName", modifiedByDisplayName) :
                new ObjectParameter("ModifiedByDisplayName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UPDATE_User", idParameter, usernameParameter, firstNameParameter, lastNameParameter, emailParameter, mobileParameter, modifiedByUserNameParameter, modifiedByDisplayNameParameter);
        }
    }
}
